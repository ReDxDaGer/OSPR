#+Title:Computational Thinking
* [#C] Introduction to flowcharts
> Before programming we need to write down the code structure plan
** Two ways of planning
*** Psuedocode
*** Flowcharts
  > diagrammatic representations
  A) Process -> rectangle (variables)
  B) Flowline -> arrow
  C) diamon -> Decision (if/else)
  D) Softbox -> Terminal (start/end)

* [#C] Sanity of data
> checking for unusualness in data
** Check for other parameters (In the population), assume some are correct and draw a correction of the strange value
*** Example
1. Name: Naveen
2. Gender: Male
3. DOB: Bengaluru
4. City: 13th Oct
5. M: 75
6. C: 43
7. P: 34

> Here DOB is swapped with City

* [#A] Subtypes of basic datatypes
** Subtypes => Subsets of datatype
** Have a RANGE of values (Init -> MAX)
*** Restriction of RANGE boundaries

**** CONSTRAINTS <-- Context
**** Availibility of OPERATIONS <-- Context
    * EXAMPLE
      - SEQNO <subset> INTEGER
      - OPERATIONS
        1. Arithmetic (+/-)
        2. Logical (All)
******* EXAMPLE2
- Gender <subset> Characters
- Values (M/F)
- OPERATIONS
  1. Logical (=)
  2. Arithmetic (NONE)
* [#B] Transformation of datatypes
** Learn by examples
** Date <-- Integer
#+BEGIN_SRC python :results output
list = ["1st January","2nd January","3rd January"]
choice = 2 # this is the input
print(list[2])
#+END_SRC

#+RESULTS:
: 3rd January

*** Integer is transformed into Date

*** Date <-- Assignment <-- Index (Integer)

** Integer <-- Float
#+BEGIN_SRC python :results output
number = 2.34
print("Type before: ", type(number))
number = number * 100
try:
    number = int(number)
    print("Integer <-- Float")
    print("Type now: ", type(number))
except exception as e:
    print("Failed to convert")
    print(e)
#+END_SRC

#+RESULTS:
: Type before:  <class 'float'>
: Integer <-- Float
: Type now:  <class 'int'>
